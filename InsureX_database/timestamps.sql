ALTER TABLE agents
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON agents
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE appraisal_companies
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON appraisal_companies
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE appraisers
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER automobile_types
BEFORE UPDATE ON appraisers
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE automobile_types
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

ALTER TABLE bulgary_details
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON bulgary_details
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE cars
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON cars
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE cities
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON cities
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE drivers
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON drivers
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE estates
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON estates
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE incident_participants
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON incident_participants
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE insurance_case_statuses
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON insurance_case_statuses
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE insurance_cases
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON insurance_cases
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE insurance_companies
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON insurance_companies
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE insured_event_types
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON insured_event_types
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE insured_events
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON insured_events
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE insured_events_files
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON insured_events_files
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE insured_persons
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON insured_persons
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE insured_property_types
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON insured_property_types
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE last_users
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON last_users
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE others
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON others
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE places
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON places
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE regions
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON regions
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE roles
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON roles
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE sdp
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON sdp
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE supplier_types
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON supplier_types
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE theft_time_intervals
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON theft_time_intervals
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE victims
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON victims
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE witnesses
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON witnesses
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE third_persons
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON third_persons
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

ALTER TABLE users
ADD COLUMN created_at TIMESTAMPTZ NULL DEFAULT NOW(),
ADD COLUMN updated_at TIMESTAMPTZ NULL DEFAULT NOW();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON users
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();